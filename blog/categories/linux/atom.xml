<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Linux | AngryGantz]]></title>
  <link href="http://AngryGantz.github.com/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://AngryGantz.github.com/"/>
  <updated>2012-12-04T19:32:29+00:00</updated>
  <id>http://AngryGantz.github.com/</id>
  <author>
    <name><![CDATA[AngryGantz]]></name>
    <email><![CDATA[angrygantz@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Блог-машина Octopress+Slitaz]]></title>
    <link href="http://AngryGantz.github.com/blog/2012/12/04/octopress-on-slitaz/"/>
    <updated>2012-12-04T08:21:00+00:00</updated>
    <id>http://AngryGantz.github.com/blog/2012/12/04/octopress-on-slitaz</id>
    <content type="html"><![CDATA[<p>Как-то у меня не получилось любови между Windows и Octopress. Не знаю, может это я такой везучий но при генерации постов периодически выползали ошибки «Неверный аргумент UTF-8». Бесило, что я никак не мог понять откуда и что. Обычная текстовая строка. Стираешь её, пишешь то же самое, ошибка пропадает. (естественно локали были настроены, все файлы utf и так далее.)</p>

<p>Устав бороться не пойми с чем, решил сделать себе виртуальную машинку с Linux под блог и для других всяких мелочей, где Linux предпочтительнее. Причем не на основном компьютере, а на "таскаемом ноутбуке". Рабочий нотик у меня старенький, особо нагружать не хотелось. Да и места там свободного кот наплакал. Не то что-бы каждый мегабайт критичен, но и не размахнешся.</p>

<!-- more -->


<p>По этим соображениям был выбран очень миленький дистрибутивчик <strong>Slitaz</strong> (<a href="http://www.slitaz.org/ru/">Домашняя страница</a>). Отличается он минималистичным стартовым размером (iso весит ~50mb), замечательно работает на 100 мегабайтах оперативки вместе с Gui, который к тому же удобен и продуман, обладает нормальной системой работы с пакетами (они у него свои). Вобщем на мой взгляд то, что доктор прописал. По моим прикидкам после установки всего, чего надо (не только для блога) всё это хозяйство легко впишется в 600-800мб и будет летать на чем угодно.</p>

<p>Для виртуализации я выбрал Virtual Box из соображений простоты, небольших размеров и удобства использования. Гипервизор мне точно ни к чему тут ;-)</p>

<h2>Установка Virtual Box</h2>

<ul>
<li><a href="https://www.virtualbox.org/wiki/Downloads">Забираем отсюда</a> последнюю версию инсталлятора и просто запускаем setup. <strong>Внимание!</strong> Есть один подводный камень. Ни в пути к установленному VB, ни в пути к его виртуальным машинам не должно быть кириллицы, иначе эта штука работать не будет. В остальном проблем нет. Ставим, выбираем папку для виртуальных машин. Собственно вот и весь процесс.</li>
</ul>


<h2>Создание ВМ Slitaz</h2>

<ul>
<li><a href="http://www.slitaz.org/ru/get/#stable">Забираем отсюда</a> последнюю стабильную версию Live CD. В моем случае это был Slitaz 4.0 Вес Live CD 37,4Mb.</li>
<li>Создание виртуальной машины.</li>
<li>Открываем VB, создаем машину, обзываем Slitaz, отмечаем что тип Linux, версия Linux 2.6. Далее в диалоге оставляем по умолчаниб 256mb памяти, отдаваемой машине (это даже с избытком, но пусть будет).

<ul>
<li><p>Выбор жесткого диска. Выбираем пункт «Создать новый виртуальный жесткий диск». Далее выбор типа жесткого диска - выбираем VDI. Далее идет вопрос о формате хранения. В данном случае оптимально будет выбрать  «Динамический виртуальный жесткий диск» Пусть занимает столько места, сколько действительно надо. Минусы этого решения в данном случае не существенны абсолютно. Далее размер. Ставлю 2Gb. По моим предположениям это раза в 3 больше чем надо, но у нас выбрана динамика в форматах диска, так что пусть будет, займет машина всё равно ровно столько, сколько ей надо. Почему тогда не 100Gb? Служебная информация файловой системызанимает место. Обьявим 100Gb диск и в зависимости от выбраной ФС файл виртуальной машины сразу станет 2-4Gb.</p></li>
<li><p>Далее подключение образа. Идём в настройки машины и в пункте «Носители» подсовываем приводу ВМ скачанный образ. Собственно всё.</p></li>
</ul>
</li>
</ul>


<h2>Установка Slitaz на виртуальный HDD</h2>

<p>Скачанный нами образ является Live-CD, но в нашем случае лучше работать с установленной на виртуальный жесткий диск системой. Так что будем наш «слитазик» устанавливать.</p>

<p>Запускаем машину. В первом появившемся меню просто жмём «Enter» на первом пункте и ждём. По дороге спросят локаль и раскладку клавиатуры. Везде выбираем русский и буквально через несколько секунд мы уже лицезреем десктоп.</p>

<p>Готовим систему к установке. Сначала надо подготовить наш жесткий диск. В установщик SliTaz не входит программа подготовки жесткого диска, поэтому надо его приготовить заранее. В меню «Application» выбираем <code>Система</code>-><code>GParted Partition editor</code>. На вопрос о пароле отвечаем <strong>root</strong>.</p>

<p>Видим наш 2gb диск, помеченный как <code>unallocated</code>. Не будем мудрить и всё пространство отдадим под один раздел, который отформатируем как ext3.
Сначала в меню <code>Device</code> выбираем <code>Create Partition Table...</code> и в открывшемся диалоге жмем <code>apply</code>. Далее меню <code>Partition</code> пункт <code>New</code>. В открывшемся диалоге меняем метку диска по желанию (<code>label</code>) и файловую систему (<code>File system</code>) меняем на ext3. «Служебка» на <strong>ext3</strong> занимает в 2 раза больше места, чем на <strong>ext2</strong> (в районе 3% от общего размера диска, то есть около 70mb в нашем случае), но она всё таки понадежнее. Предпочитаю её даже на виртуальной машине. Остальное устраивает, жмем Apply. И последнее - в меню <code>Edit</code> выбираем пункт <code>Apply All operatuons</code> Все, диск готов к использованию, закрываем программу.</p>

<p>Запускаем панель администрации (слева вверху иконка с гаечным ключом на красном фоне). Нас спрашивают рутовые логин и пароль, вводим <code>root</code>, <code>root</code> и попадаем в панель администрации.</p>

<p>В меню выбираем пункт <code>install</code>, в «выпавшем» списке выбираем <code>install SliTaz</code> и далее <code>Continue Installation</code>.
«Siltaz source media» оставляем без изменений, в разделе «Hard Disk drive» выбираем partition для установки (она у нас одна), галочку о форматировании можно снять, диск у нас и так готов. Далее заполняем данные на рута и первого пользователя и <strong>обязательно ставим галочку на пункте «Install Grub»</strong>  и жмем кнопку продолжения инсталляции. собственно всё. Жмем кнопку перезагрузки, заново выбираем русский при первом старте и система готова.</p>

<p>Пока наш файл виртуальной машины занимает 220mb (из которых около 70 это служебка файловой системы ext3).</p>

<h2>Установка VBox Guest Additions</h2>

<p>Для того, что-бы заработали приятные плюшки вроде нормального полноэкранного режима, двусторонний буфер обмена между гостевой и хост-машинами, общие папки, «Drag-and-drop» между хостом и гостевой, необходимо в гостевую машину установить специальный пакет утилит. И вот тут начинается Марлезонский балет по полной программе. Помучался я изрядно, но в итоге всё заработало. Поехали.</p>

<ol>
<li>Приводу cd ВМ подсовываем <code>VBoxGuestAdditions.iso</code>, который лежит в папке, куда установлен VBox.</li>
<li>Запускаем ВМ</li>
<li>Административная панель, пункт <code>Package</code>.</li>
<li>Выполняем <code>Recharge list</code> - обновляем информацию о доступных пакетах.</li>
<li>Устанавливаем пакет linux-api-headers</li>
<li>Устанавливаем пакет linux-module-headers</li>
<li>Устанавливаем пакет bzip2</li>
<li>На десктопе открываем папку <code>My Documents</code>. Там видим примонтированный CD с утилитами, кликаем на него, жмём «F4». В нужном нам месте открывается терминал. Дальше нужны права рута. в терминале даем команду <code>su</code> и вводим пароль рута (root, если не меняли при установке).</li>
<li>Ставим пакет дав команду в терминале <code>./VBoxLinuxAdditions.run</code>. Установка идет около минуты и сопровождается потоком информации, на которую можно не обращать внимания.</li>
<li>в папке '/etc/X11/xorg.conf.d' удаляем несколько файлов, вызывающих конфликт:

<ul>
<li> rm /etc/X11/xorg.conf.d/10-ServerLayout.conf</li>
<li> rm /etc/X11/xorg.conf.d/50-Monitor.conf</li>
<li> rm /etc/X11/xorg.conf.d/60-Device.conf</li>
<li> rm /etc/X11/xorg.conf.d/70-Screen.conf</li>
</ul>
</li>
<li>Открываем файл <strong>/etc/rcS.conf</strong> (<code>vi /etc/rcS.conf</code> или  <code>nano /etc/rcS.conf</code> для не знающих <strong>vi</strong>) и добавляем "vboxguest vboxsf vboxvideo" в строку <strong>LOAD_MODULES</strong>. После редактирования должно выглядеть примерно так:
<code>LOAD_MODULES=" snd_hda_intel vboxguest vboxsf vboxvideo"</code></li>
<li>Открываем файл  <strong>/etc/slim.conf</strong> и меняем строку <code>login_cmd</code> следующим образом:
<code>login_cmd VBoxClient-all &amp; exec /bin/sh -l ~/.xinitrc %session</code></li>
<li>Уффф. Всё. Рестарт ;-)</li>
<li>После перезагрузки системы поставьте разрешение монитора в <code>auto</code> (это в главном меню, в параметрах).</li>
<li>Если собираетесь использовать 3D, поставьте ещё пакет <code>mesa-demos</code> и в настройках виртуальной машины включите галочку о поддержке 3D</li>
</ol>


<p> После установки этого удовольствия наша виртуальная машина выросла почти в 2 раза - до 500Mb.</p>

<h2>Установка Octopress</h2>

<ol>
<li><p>Сначала надо подготовить среду. Ставим следующие пакеты:</p>

<pre><code>* Ruby
* Ruby-dev
* Python-dev
* openssh
* git
</code></pre>

<p>Внимание. На момент написания этих строк Octopress без танцев с бубнами на тему версий, нормально работал только с Ruby 1.9.2.</p></li>
<li><p>Зарегистрируйтесь на github.com и создайте репозиторий с именем <strong>username.github.com</strong> Именно так, с «github.com» (иначе нужны будут дополнительные танцы с настройкой)</p></li>
<li>Тащим Octopress. Откройте терминал в домашней папке и дайте команду <code>git clone git://github.com/imathis/octopress.git octopress</code> (последний параметр - это папка котурую создаст git и сложит туда всё, что вытащит)</li>
<li>Переходим в новую папку с Octopress. Сейчас нам потребуются права рута, что-бы поставить недостающие части. (команда <code>su</code>). Выполняем команду <code>gem install bundler</code> и затем <code>bundle install</code>. Затем выходим из режима рута (команда <code>exit</code>)</li>
<li>Назначаем тему по умолчанию = 'rake install`</li>
<li>Для того, чтобы git смог работать по SSH протоколу, необходим обмен ключами. Сгенерируем ключи. Команда `ssh-keygen -t rsa -C "name@mail.ru" создаст в домашней директории папку <strong>~.ssh/</strong> c 2 файлами в ней - <strong>id_rsa</strong> и <strong>id_rsa.pub</strong>. Соответственно закрытый и публичный ключи. Если не страдаете паранойей в тяжелой форме, на предложение ввести пассфразу для доступа к закрытому ключу просто нажмите ввод. Иначе при каждом чихе гита он будет с вас её требовать.</li>
<li><strong>id_rsa.pub</strong> откройте в текстовом редакторе (не консольном). Проще всего на десктопе открыть папку My Documents, в меню <code>view</code> выбрать <code>Show hidden files</code>, кликнуть на папку <strong>.ssh</strong> и кликнуть на файл <strong>id_rsa.pub</strong> Открыв файл скопируйте всё содержимое. На github.com в своём аккаунте зайдите в настройки и в разделе <code>SSH Keys</code> добавьте ключ. Название любое, поле ключа - то, что вы скопировали из файла. перед добавлением у вас попросят ввести пароль от аккаунта.</li>
<li>Необходимо чуть донастроить git. в тарминале выполните команды:

<pre><code>* git config --global user.name "GithubComUserName"
* git config --global user.email "GithubComUserEmail" 
</code></pre>

<p>Где  "GithubComUserName" и   "GithubComUserEmail" соответственно ваши имя пользователя и Email с которыми вы регистрировались на github.com</p></li>
<li>Остался последний шаг по установке Octopress. Команда <code>rake setup_github_pages</code>. На вопрос об url напишите <code>git@github:USERNAME/REPONAME.git</code>  (например git@github:Pupkin/pupkin.github.com.git ) если ваш юзернэйм на github.com pupkin и вы создали репозиторий pupkin.github.com</li>
</ol>


<p>Собственно на этом установка завершена. можно проверить работоспособность. дайте 2 команды. <code>rake new_post["My First Post Octo"]</code> и затем <code>rake gen_deploy</code>. Если всё сделано правильно, вы минут через 10 сможете лицезреть свой новый блог с вашим первым постом по адресу, соответствующему названию репозитория (например pupkin.github.com)</p>

<h2>Небольшая донастройка среды</h2>

<h3>Переключение клавиатуры</h3>

<p>В процессе установки всей этой радости русский нам не был нужен. Но теперь пора что-нибудьпредпринять, поскольку хоть русскую локаль нам как-бы дали, а вот переключение раскладки клавиатуры дать забыли.</p>

<p>Простейший метод включения. В домашней директории создаем файлик <strong>rus.sh</strong> (<code>touch rus.sh</code>), делаем его исполняемым (<code>chmod +x rus.sh</code>), открываем его в текстовом редакторе и пишем в него следующее:</p>

<p>```bash</p>

<h1>!/bin/sh</h1>

<p>echo <code>setxkbmap "us,ru" ",winkeys" "grp:alt_shift_toggle,grp_led:scroll"</code>
<code>``   
Теперь идем в меню-&gt;параметры-&gt;Auto started applications. Там жмем</code>Add<code>и в первое поле пишем имя файлика вместе с путем  нему (например</code>/home/tux/rus.sh`</p>

<p>Теперь отобразим индикатор раскладки. На верхней панели правый клик -> <code>Add remove Panel items</code> -> <code>add</code> -> из списка выбираем <code>Keyboard layot switcher</code> добвляем и кнопками Up/Down выбираем позицию показа.</p>

<h3>Установка пакетв русской локали.</h3>

<p>Несмотря на то, что при установке мы выбирали русскую локаль и даже часть менюшек видимна русском, на самом деле пакет русской  локали в системе н установлен. Исправляем этот недочет и ставим пакет <code>locale ru</code> или через менеджер пакетов, как вы делали это раньше, или в терминале командой <code>tazpkg get-install locale-ru</code></p>
]]></content>
  </entry>
  
</feed>
